<Simulation verbosity="debug">
  <RunInfo>
    <JobName>diesel_o</JobName>
    <WorkingDir>diesel_o</WorkingDir>
    <Sequence>sweep</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Steps>
    <MultiRun name="sweep">
      <Input class="Files" type="raven">inner_workflow</Input>
      <Input class="Files" type="">heron_lib</Input>
      <Model class="Models" type="Code">raven</Model>
      <Sampler class="Samplers" type="Grid">grid</Sampler>
      <Output class="DataObjects" type="PointSet">grid</Output>
      <Output class="OutStreams" type="Print">sweep</Output>
    </MultiRun>
  </Steps>

  <VariableGroups>
    <Group name="GRO_capacities">diesel_generator_capacity, grid_capacity, industry_demand_thermal_capacity, industry_demand_electricity_capacity, desalination_capacity</Group>
    <Group name="GRO_outer_results">mean_LC_Mult, std_LC_Mult, med_LC_Mult, max_LC_Mult, min_LC_Mult, perc_5_LC_Mult, perc_95_LC_Mult, samp_LC_Mult, var_LC_Mult</Group>
    <Group name="GRO_outer_debug_dispatch" />
    <Group name="GRO_outer_debug_synthetics" />
    <Group name="GRO_outer_debug_cashflows" />
  </VariableGroups>

  <DataObjects>
    <PointSet name="grid">
      <Input>GRO_capacities</Input>
      <Output>GRO_outer_results</Output>
    </PointSet>
  </DataObjects>

  <Models>
    <Code name="raven" subType="RAVEN">
      <executable>/Users/garrm/codes/raven/raven_framework</executable>
      <outputDatabase>disp_results</outputDatabase>
      <conversion>
        <input source="../write_inner.py" />
      </conversion>
      <alias variable="denoises" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:denoises</alias>
      <alias variable="diesel_generator_capacity" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:diesel_generator_capacity</alias>
      <alias variable="grid_capacity" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:grid_capacity</alias>
      <alias variable="industry_demand_thermal_capacity" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:industry_demand_thermal_capacity</alias>
      <alias variable="industry_demand_electricity_capacity" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:industry_demand_electricity_capacity</alias>
      <alias variable="desalination_capacity" type="input">Samplers|MonteCarlo@name:mc_arma_dispatch|constant@name:desalination_capacity</alias>
    </Code>
  </Models>

  <Distributions>
    <Uniform name="diesel_generator_capacity_dist">
      <lowerBound>60.0</lowerBound>
      <upperBound>720.0</upperBound>
    </Uniform>
    <Uniform name="desalination_capacity_dist">
      <lowerBound>-720.0</lowerBound>
      <upperBound>0.0</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Grid name="grid">
      <constant name="denoises">2</constant>
      <variable name="diesel_generator_capacity">
        <distribution>diesel_generator_capacity_dist</distribution>
        <grid type="value" construction="custom">60.0 180.0 360.0 540.0 720.0</grid>
      </variable>
      <constant name="grid_capacity">-1e+200</constant>
      <constant name="industry_demand_thermal_capacity">-3.71</constant>
      <constant name="industry_demand_electricity_capacity">-7.02</constant>
      <variable name="desalination_capacity">
        <distribution>desalination_capacity_dist</distribution>
        <grid type="value" construction="custom">-720.0 -540.0 -360.0 -180.0 0.0</grid>
      </variable>
    </Grid>
  </Samplers>

  <Files>
    <Input name="inner_workflow" type="raven">../inner.xml</Input>
    <Input name="heron_lib">../heron.lib</Input>
  </Files>

  <OutStreams>
    <Print name="sweep">
      <type>csv</type>
      <source>grid</source>
    </Print>
    <Plot name="opt_path" subType="OptPath">
      <source>opt_soln</source>
      <vars>GRO_capacities, mean_NPV</vars>
    </Plot>
  </OutStreams>
</Simulation>
